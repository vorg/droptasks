// Generated by CoffeeScript 1.6.2
var createNode, deserialize, init, isProject, loadTaskFile, nodeTmpl, state;

nodeTmpl = null;

state = {
  prev: null,
  cur: null,
  undoStack: []
};

init = function() {
  nodeTmpl = $('#nodeTmpl').html();
  return loadTaskFile('http://localhost:3001/?get');
};

loadTaskFile = function(file) {
  return $.get(file, function(data) {
    deserialize(data);
    return state.prev = data;
  });
};

isProject = function(line) {
  var atIndex, s;

  s = line.trim();
  atIndex = s.indexOf('@');
  if (atIndex !== -1) {
    s = s.substr(0, atIndex - 1).trim();
  }
  return s.lastIndexOf(':') === s.length - 1;
};

deserialize = function(data) {
  var line, lines, newNode, nodesInProject, projectName, task, _i, _len, _results;

  $('.columns').empty();
  lines = data.split('\n');
  nodesInProject = 0;
  _results = [];
  for (_i = 0, _len = lines.length; _i < _len; _i++) {
    line = lines[_i];
    line = line.trim();
    if (line.length === 0) {
      continue;
    }
    if (isProject(line)) {
      projectName = line.substr(0, line.length);
      _results.push(createNode(projectName, ['project']));
    } else {
      task = line;
      task = task.replace(/\s*-\s*/, '');
      _results.push(newNode = createNode(task, []));
    }
  }
  return _results;
};

createNode = function(text, classNames) {
  var node;

  node = $($.mustache(nodeTmpl, {
    text: text,
    className: classNames.join(' ')
  }));
  node.click(function() {
    return selectNode(node);
  });
  node.dblclick(function() {
    return editNode(node);
  });
  $('.columns').eq(0).append(node);
  return node;
};

$(document).ready(init);
